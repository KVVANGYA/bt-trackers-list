name: Update BT Trackers List

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # 每天 UTC 时间 0 点运行
  push:
    branches:
      - main # 或你的默认分支名

jobs:
  update-list:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Create Merge Script
        run: |
          cat > merge_trackers.sh << 'EOF'
          #!/bin/bash
          
          TMP_DIR=$(mktemp -d)
          echo "Using temporary directory: $TMP_DIR"
          
          # 定义 Tracker 列表 URLs
          urls=(
            "https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all.txt"
            "https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all_ip.txt"
            "https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all_udp.txt"
            "https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all_http.txt"
            "https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all_https.txt"
            "https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_best.txt"
            "https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_best_ip.txt"
            
            "https://cf.trackerslist.com/all.txt"
            "https://cf.trackerslist.com/best.txt"
            "https://cf.trackerslist.com/http.txt"
            "https://cf.trackerslist.com/udp.txt"
            
            "https://raw.githubusercontent.com/XIU2/TrackersListCollection/master/all.txt"
            "https://raw.githubusercontent.com/XIU2/TrackersListCollection/master/best.txt"
            "https://raw.githubusercontent.com/XIU2/TrackersListCollection/master/http.txt"
            "https://raw.githubusercontent.com/XIU2/TrackersListCollection/master/udp.txt"

            "https://raw.githubusercontent.com/hezhijie0327/Trackerslist/refs/heads/main/trackerslist_combine.txt"

            "https://raw.githubusercontent.com/Tunglies/TrackersList/refs/heads/main/all.txt"

            "https://raw.githubusercontent.com/adysec/tracker/main/trackers_all.txt"
            
            # 添加的新源
            "https://newtrackon.com/api/all"
            "https://newtrackon.com/api/stable?include_ipv4_only_trackers=1&include_ipv6_only_trackers=1" # 新增
            
            "https://trackers.mlsub.net/all.txt"
            "https://raw.githubusercontent.com/DeSireFire/animeTrackerList/master/AT_all.txt"
            
            # 添加的新源 (注意: 这个 URL 返回的是纯文本列表)
            "https://torrends.to/torrent-tracker-list/?download=latest" # 新增
            
            "https://cdn.jsdelivr.net/gh/ngosang/trackerslist@master/trackers_all.txt"
            "https://cdn.jsdelivr.net/gh/XIU2/TrackersListCollection@master/all.txt"
          )
          
          OUTPUT_FILE="$TMP_DIR/trackers_merged_raw.txt" # 原始合并文件
          FILTERED_FILE="$TMP_DIR/trackers_filtered.txt"  # 过滤后的文件
          FINAL_FILE="trackers_final.txt"
          
          # 清空或创建临时输出文件
          > "$OUTPUT_FILE"
          
          # 遍历 URL 并获取内容
          for url in "${urls[@]}"; do
            echo "Fetching $url..."
            # 使用 curl 获取内容，静默模式，失败时显示错误
            # --max-time 30 设置最大请求时间，避免卡住
            # -H "User-Agent: Mozilla/5.0" 添加 User-Agent 头部，有些站点可能需要
            content=$(curl -sSL --fail --max-time 30 -H "User-Agent: Mozilla/5.0" "$url" 2>/dev/null)
            
            # 检查 curl 是否成功
            if [ $? -eq 0 ] && [ -n "$content" ]; then
              # 将内容追加到临时输出文件
              echo "$content" >> "$OUTPUT_FILE"
              # 添加一个换行符以确保列表项分隔
              echo "" >> "$OUTPUT_FILE"
            else
              echo "Warning: Failed to fetch or empty content from $url"
            fi
          done
          
          # 初始化过滤后的文件
          > "$FILTERED_FILE"
          
          # 逐行处理合并后的原始文件
          while IFS= read -r line || [[ -n "$line" ]]; do # 处理最后一行可能没有换行符的情况
            # 去除行首行尾空白
            trimmed_line=$(echo "$line" | xargs)
            
            # 跳过空行和注释行
            if [[ -n "$trimmed_line" && ! "$trimmed_line" =~ ^[[:space:]]*# ]]; then
              # 检查是否为有效的 Tracker URL (以常见协议开头)
              # 使用更严格的正则表达式匹配 URL 格式
              if [[ "$trimmed_line" =~ ^(http|https|udp|ws|wss)://[a-zA-Z0-9._:-]+ ]]; then
                 echo "$trimmed_line" >> "$FILTERED_FILE"
              # 特殊处理 newtrackon.com API 返回的纯域名:端口格式 (匹配 api/all 或 api/stable)
              elif [[ "$url" == *"newtrackon.com/api/"* ]] && [[ "$trimmed_line" =~ ^[a-zA-Z0-9.\-]+:[0-9]+(/announce)? ]]; then
                 # 为 newtrackon 的格式添加 udp:// 前缀 (它通常是 UDP)
                 # 确保不重复添加 /announce
                 if [[ "$trimmed_line" == */announce ]]; then
                    echo "udp://$trimmed_line" >> "$FILTERED_FILE"
                 else
                    echo "udp://$trimmed_line/announce" >> "$FILTERED_FILE"
                 fi
              else
                 # 可选：打印被过滤掉的行用于调试 (生产环境建议注释掉)
                 # echo "DEBUG - Filtered out: '$trimmed_line'"
                 :
              fi
            fi
          done < "$OUTPUT_FILE"
          
          # 对过滤后的文件进行排序和去重，生成最终文件
          sort "$FILTERED_FILE" | uniq > "$FINAL_FILE"
          
          # 创建带时间戳的文件（可选）
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          cp "$FINAL_FILE" "trackers_$TIMESTAMP.txt"
          
          # 清理临时目录
          rm -rf "$TMP_DIR"
          
          echo "Merge, deduplication, and filtering complete."
          echo "Final file: $FINAL_FILE"
          echo "Total trackers: $(wc -l < $FINAL_FILE)"
          EOF
          
          chmod +x merge_trackers.sh

      - name: Run Merge Script
        run: ./merge_trackers.sh

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Commit and Push Changes
        run: |
          git add trackers_final.txt
          # 可选：添加带时间戳的文件
          # git add trackers_*.txt
          
          if ! git diff --cached --quiet; then
            git commit -m "Update trackers list ($(date -u))"
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main
          else
            echo "No changes to commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
